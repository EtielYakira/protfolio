{"version":3,"sources":["Components/Home/index.js","DAL/Quote/data.js","Components/Quote/QuoteCard.js","Components/Quote/index.js","DAL/Voting/data.js","Components/Voting/VotingCard.js","Components/Voting/index.js","Components/BMI/BmiCalculator.js","DAL/BMI/bmiAlgoritem.js","Components/BMI/ResultBmi.js","Components/BMI/index.js","Components/Students/StudentForm/ErrorMessages.js","Components/Students/StudentForm/StudentForm.js","Components/Students/StudentList/StudentList.js","DAL/Students/data.js","Components/Students/Students.js","Components/Chuck/RandomJokeBox.js","Components/Chuck/SelectInput.js","Components/Chuck/SearchBox.js","Components/Chuck/DataInCategorySelectedToShow.js","Components/Chuck/Chuck.js","AppRouter.js","App.js","index.js"],"names":["Home","Container","className","id","Button","variant","href","target","quotesData","quote","maker","ImgesForQuotes","QuoteCard","currQuote","currImg","Card","Header","Body","style","backgroundColor","title","Math","floor","random","Quote","randomNumber","lengthToTake","useState","length","currQuoteAndColor","setCurrQuoteAndColor","Row","Col","md","onClick","VotingData","name","img","votes","comments","VotingCard","item","currComment","changeVoteCount","addComment","changeCurrComment","index","width","Img","src","Title","color","value","e","InputGroup","FormControl","placeholder","aria-label","defaultValue","onBlur","Append","ListGroup","map","comment","Item","Voting","items","setItems","setCurrComment","useEffect","sort","a","b","reverse","objName","push","upOrDown","BmiCalculator","onParameters","parameters","isOkToShow","Form","Object","keys","parameter","Group","Label","Control","type","BMI","weight","height","toFixed","ResultBmi","Bmi","setParameters","okToShow","setOkToShow","ErrorMessages","errors","error","StudentForm","addStudent","handleClose","radioValue","setRadioValue","email","valid","validations","required","pattern","username","address","course","gender","data","setData","validateInput","newErrors","test","onSubmit","preventDefault","as","Prepend","Text","rows","onChange","ButtonGroup","toggle","radio","idx","ToggleButton","checked","wrongInfoCnt","detailsObj","key","StudentsList","students","onPikingStudent","studentToShow","show","setShow","wantSortList","setWantSortList","fontFamily","fontSize","Modal","onHide","closeButton","maxHeight","maxWidth","studentsData","Students","setStudents","setStudentToShow","studentDetailObj","RandomJokeBox","params","randomJoke","setRandomJoke","fetch","then","response","json","joke","SelectInput","categoryList","onChoosingCategory","optionName","SearchBox","onChangeSearchWord","aria-describedby","DataInCategorySelectedToShow","dataToShow","searchWord","filter","includes","searchWords","textToHighlight","autoEscape","highlightClassName","Chuck","setCategoryList","categorySelected","setCategorySelected","setDataToShow","setSearchWord","jokes","jokesArr","console","log","categorys","RouterCall","Navbar","Brand","to","Nav","Link","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2b42f4f.chunk.js","sourcesContent":["import Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function Home() {\r\n    return <>\r\n        <Container className='text-center mt-5' id='HomeContainer'>\r\n        <div>\r\n         <h1 className=''>MY projects</h1>\r\n         <h3 className='my-1'>amazing project one of a kind</h3>\r\n         <Button className='my-4' variant='info' href=\"https://www.linkedin.com/in/itiel-yakira/\" target='_blank'>   Learn More About Me </Button>\r\n        </div>\r\n        </Container>\r\n    </>\r\n}","const quotesData =[\r\n    {\r\n        quote:'“Be yourself; everyone else is already taken.”',\r\n        maker:'Oscar Wilde'\r\n    },\r\n    {\r\n        quote:'“Two things are infinite: the universe and human stupidity; and Im not sure about the universe.” ',\r\n        maker:'Albert Einstein'\r\n    },\r\n    {\r\n        quote:'“So many books, so little time.”',\r\n        maker:' Frank Zappa'\r\n    },\r\n    {\r\n        quote:'“A room without books is like a body without a soul.”',\r\n        maker:' Marcus Tullius Cicero'\r\n    },\r\n]\r\n\r\n\r\nconst ImgesForQuotes =[\r\n    '#FFAEBC',\r\n    '#A0E7E5',\r\n    'yellow',\r\n    '#B4F8C8',\r\n    '#FBE7C6',\r\n    '#EEEDE7',\r\n    '#E08955'\r\n]\r\n\r\nexport {ImgesForQuotes, quotesData}","import Card from 'react-bootstrap/Card'\r\n\r\n\r\n\r\n\r\nfunction QuoteCard({currQuote, currImg}) {\r\n    \r\n    \r\n    return (\r\n<Card>\r\n  <Card.Header>Quote</Card.Header>\r\n  <Card.Body style={{backgroundColor:`${currImg}`}}>\r\n    <blockquote className=\"blockquote mb-0\">\r\n      <p>\r\n        {' '}\r\n        {currQuote.quote}{' '}\r\n      </p>\r\n      <footer className=\"blockquote-footer\">\r\n        {currQuote.maker} <cite title=\"Source Title\">{Math.floor(Math.random()*2021)}bc</cite>\r\n      </footer>\r\n    </blockquote>\r\n  </Card.Body>\r\n</Card>\r\n    ) \r\n}\r\n\r\nexport default QuoteCard","import {ImgesForQuotes, quotesData} from '../../DAL/Quote/data'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {useState} from 'react'\r\nimport QuoteCard from './QuoteCard'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nfunction Quote() {\r\n    const randomNumber = (lengthToTake) => Math.floor(Math.random() * lengthToTake)\r\n\r\n    \r\n    let [currQuoteAndColor, setCurrQuoteAndColor] = useState({\r\n        currImg:ImgesForQuotes[randomNumber(ImgesForQuotes.length)],\r\n        currQuote:quotesData[randomNumber(quotesData.length)]\r\n    })\r\n    \r\n    function onChangeQuote() {\r\n        setCurrQuoteAndColor({\r\n            currImg:ImgesForQuotes[randomNumber(ImgesForQuotes.length)],\r\n            currQuote:quotesData[randomNumber(quotesData.length)]\r\n        })\r\n    }\r\n    \r\n    return <>\r\n    <h1 className='text-center'>Students Center</h1>\r\n\r\n        <Row>\r\n            <Col md={4} className=\"mx-auto my-5\">\r\n        <QuoteCard currImg={currQuoteAndColor.currImg}  currQuote={currQuoteAndColor.currQuote}/>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Button className=\"mx-auto\" onClick={() => onChangeQuote()} >\r\n                Change Quote\r\n            </Button>\r\n        </Row>\r\n\r\n    </>\r\n}\r\n\r\nexport default Quote","const VotingData = [\r\n    {\r\n        name:'batman',\r\n        img:'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.XxRrkxXPB7iGoYFlKZHp7AHaHa%26pid%3DApi&f=1',\r\n        votes:0,\r\n        comments:[]\r\n    },\r\n    {\r\n        name:'superman',\r\n        img:'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.HH6UujJZqKzBfZU5u-jcQgHaHa%26pid%3DApi&f=1',\r\n        votes:0,\r\n        comments:[]\r\n    },\r\n    {\r\n        name:'spiderman',\r\n        img:'https://i.pinimg.com/originals/32/04/6c/32046c6fb666d7b3c2525190e4fc4575.jpg',\r\n        votes:0,\r\n        comments:[]\r\n    }\r\n]\r\n\r\n\r\nexport default VotingData","\r\n\r\nimport React from \"react\";\r\nimport Card  from \"react-bootstrap/Card\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport {AiFillDislike, AiFillLike, AiOutlineNumber} from 'react-icons/ai'\r\nimport {BiMedal} from 'react-icons/bi'\r\nfunction VotingCard({ item,currComment, changeVoteCount, addComment, changeCurrComment, index}) {\r\n\r\n  return (\r\n    <Card className=\"text-center\" style={{ width: \"20rem\" }}>\r\n      <Card.Img variant=\"top\" src={`${item.img}`} />\r\n        <Card.Header><strong>Vote count: {item.votes}</strong></Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>{item.name}</Card.Title>\r\n        <Card.Title><AiOutlineNumber/>{index + 1}<span>{\r\n            index === 0 ? <BiMedal style={{color:'gold'}}/>\r\n            : index === 1 ? <BiMedal style={{color:'silver'}}/>\r\n            : index === 2 ? <BiMedal style={{color:'brown'}}/>\r\n            : \"\"\r\n            }</span></Card.Title>\r\n        <Button className='mx-1' value='👍' variant=\"info\" onClick={(e) => changeVoteCount(item.name, e.target.value)}>\r\n        <AiFillLike/>\r\n        </Button>\r\n        <Button className='mx-1' value='👎' variant=\"info\" onClick={(e) => changeVoteCount(item.name, e.target.value)}>\r\n          <AiFillDislike/>\r\n        </Button>\r\n\r\n        <InputGroup className=\"my-3\">\r\n    <FormControl\r\n      placeholder=\"Comment Here\"\r\n      aria-label=\"Comment\"\r\n      defaultValue={\"\"}\r\n      onBlur={(e) => changeCurrComment(e.target.value)}\r\n    />\r\n    <InputGroup.Append>\r\n      <Button variant=\"outline-secondary\" onClick={() => addComment(item.name,currComment)}>Add Comment</Button>\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\n      \r\n\r\n  <ListGroup>\r\n      {item.comments.map((comment, index )=> <ListGroup.Item key={index}>{comment}</ListGroup.Item>)}\r\n    </ListGroup>\r\n\r\n\r\n\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nexport default VotingCard;","import React, { useEffect, useState } from \"react\";\r\nimport  Container from \"react-bootstrap/Container\";\r\nimport  Col  from \"react-bootstrap/Col\";\r\nimport  Row from \"react-bootstrap/Row\";\r\nimport VotingData from \"../../DAL/Voting/data\";\r\nimport VotingCard from \"./VotingCard\";\r\n\r\nfunction Voting() {\r\n    let [items, setItems] = useState([]);\r\n    let [currComment, setCurrComment]= useState('')\r\n    \r\n    function changeCurrComment(comment) {\r\n        setCurrComment(comment)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setItems(VotingData);\r\n      }, []);\r\n\r\n      function changeVoteCount(objName, upOrDown) {\r\n        items = items.map((item) => {\r\n          if (item.name === objName) {\r\n              if(upOrDown === '👍'){\r\n                  item.votes += 1;\r\n              }else if(upOrDown === '👎'){\r\n                  item.votes -= 1;\r\n              }\r\n          }\r\n          return item;\r\n        });\r\n        setItems(items);\r\n      }\r\n\r\n      function addComment(objName,comment) {\r\n        items = items.map((item) => {\r\n            if (item.name === objName && comment) {\r\n              item.comments.push(comment);\r\n              setCurrComment('')\r\n            }\r\n            return item;\r\n          });\r\n          setItems(items);\r\n        }\r\n      \r\n    \r\n    return<>\r\n            <h1 className='mx-auto text center'>Voting App</h1>\r\n\r\n        <Row className='bg-dark text-center mb-lg-4'>\r\n            <Col className=\"text-white\">Your Favorite Hero</Col>\r\n            </Row>\r\n        <Container>\r\n            <Row>\r\n            {items.sort((a ,b) => a.votes - b.votes).reverse().map((item, index) => {\r\n                return(\r\n                <Col>\r\n                <VotingCard\r\n                index={index} \r\n                item={item} \r\n                currComment={currComment}\r\n                changeCurrComment={(comment) => changeCurrComment(comment)}\r\n                addComment={(objName,comment) => addComment(objName,comment)}\r\n                changeVoteCount={(objName, upOrDown) => changeVoteCount(objName, upOrDown)}/>\r\n                </Col>\r\n                )\r\n            })}\r\n            </Row>\r\n            \r\n            \r\n        </Container>\r\n\r\n    </>\r\n}\r\n\r\nexport default Voting","import Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction BmiCalculator({onParameters, parameters, isOkToShow}) {\r\n    return <>\r\n    <Form className=\"container my-4\">\r\n {(Object.keys(parameters)).map(parameter =>\r\n\r\n    (<Form.Group>\r\n       <Form.Label>{parameter}</Form.Label>\r\n       <Form.Control onBlur={e => onParameters(e.target.name, e.target.value)} name={parameter} type=\"number\" placeholder={`Enter ${parameter}`} />\r\n     </Form.Group>)\r\n )}\r\n\r\n  <Button variant=\"info\" type=\"button\" onClick={() => isOkToShow()}>\r\n    Submit\r\n  </Button>\r\n</Form>\r\n</>\r\n}\r\n\r\nexport default BmiCalculator\r\n","const BMI = (weight, height) =>  (weight / ((height/100)**2)).toFixed(1)\r\n\r\n\r\nexport default BMI","import BMI from '../../DAL/BMI/bmiAlgoritem'\r\nfunction ResultBmi({parameters}) {\r\n    return <>\r\n    <h1>WELCOMMMMM {BMI(parameters.weight, parameters.height)}</h1>\r\n    </>\r\n}\r\n\r\nexport default ResultBmi","import BmiCalculator from './BmiCalculator'\r\nimport {useState} from 'react'\r\nimport ResultBmi from './ResultBmi'\r\n\r\nfunction Bmi() {\r\n\r\n    const [parameters, setParameters] = useState({\r\n        weight:0,\r\n        height:0\r\n    })\r\n\r\n    let [okToShow, setOkToShow] = useState(false)\r\n\r\n    function onParameters(name,value) {\r\n        if(value){\r\n            setParameters({...parameters,[name]:value})\r\n    }\r\n    }\r\n\r\n    function isOkToShow() {\r\n        setOkToShow(parameters.weight !== 0 && parameters.height !== 0)\r\n    }\r\n\r\n    return <>\r\n    <h1 className='mx-auto'>Your BMI</h1>\r\n\r\n    <BmiCalculator onParameters={onParameters}  parameters={parameters} isOkToShow={isOkToShow}/>\r\n    {okToShow && <ResultBmi parameters={parameters}/>}\r\n    </>\r\n}\r\n\r\n\r\nexport default Bmi","function ErrorMessages({ errors }) {\r\n  return errors.map((error, index) => (\r\n    <small key={index} className=\"form-text text-mute\">\r\n      {error}\r\n    </small>\r\n  ));\r\n}\r\n\r\nexport default ErrorMessages;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport { useState } from \"react\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport { FaUserAlt, FaMailBulk, FaCity } from \"react-icons/fa\";\r\nimport { IoMdSchool } from \"react-icons/io\";\r\nimport ErrorMessages from \"./ErrorMessages\";\r\n\r\nfunction StudentForm({ addStudent, handleClose }) {\r\n  \r\n  const [radioValue, setRadioValue] = useState(\"\");\r\n\r\n  const radios = [\r\n    { name: `Male`, value: `Male` },\r\n    { name: \"Female\", value: \"Female\" },\r\n    { name: \"Other\", value: \"Other\" },\r\n  ];\r\n\r\n  let isValid = (e) => {\r\n    let wrongInfoCnt = 0;\r\n    let detailsObj = {};\r\n    for (const key in data) {\r\n      const value = data[key].value || \"\";\r\n      const name = key;\r\n      if (!value) {\r\n        wrongInfoCnt++;\r\n        validateInput({ target: { value, name } });\r\n      } else {\r\n        detailsObj[name] = value;\r\n      }\r\n    }\r\n    if (wrongInfoCnt === 0) {\r\n      addStudent(detailsObj);\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const [data, setData] = useState({\r\n    email: {\r\n      value: \"\",\r\n      errors: [],\r\n      valid: false,\r\n      validations: {\r\n        required: true,\r\n        pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n      },\r\n    },\r\n    username: {\r\n      value: \"\",\r\n      errors: [],\r\n      valid: false,\r\n      validations: {\r\n        required: true,\r\n        pattern: /^[a-zA-Z0-9]{2,}$/,\r\n      },\r\n    },\r\n    address: {\r\n      value: \"\",\r\n      errors: [],\r\n      valid: false,\r\n      validations: {\r\n        required: true,\r\n        pattern: /^[a-zA-Z0-9\\s,.'-]{10,}$/,\r\n      },\r\n    },\r\n    course: {\r\n      value: \"\",\r\n      errors: [],\r\n      valid: false,\r\n      validations: {\r\n        required: true,\r\n      },\r\n    },\r\n    gender: {\r\n      value: \"\",\r\n      valid: false,\r\n      errors: [],\r\n      validations: {\r\n        required: true,\r\n      },\r\n    },\r\n  });\r\n\r\n  const validateInput = ({ target: { value, name } }) => {\r\n    const newErrors = [];\r\n    const { validations } = data[name];\r\n\r\n    if (validations.required && !value) {\r\n      newErrors.push(`${name} is required`);\r\n    }\r\n    if (validations.pattern && !validations.pattern.test(value)) {\r\n      if (name === \"username\") {\r\n        newErrors.push(\"User name need to be 2 or more char\");\r\n      } else if (name === \"address\") {\r\n        newErrors.push(\"User name need to be 10 or more char\");\r\n      } else {\r\n        newErrors.push(`Invalid ${name} value`);\r\n      }\r\n    }\r\n    if (name === \"gender\") {\r\n      setRadioValue(value);\r\n    }\r\n\r\n    if (value === \"Choose Course\") {\r\n      newErrors.push(`${name} is required`);\r\n    }\r\n\r\n    setData((data) => ({\r\n      ...data,\r\n      [name]: {\r\n        ...data[name],\r\n        valid: newErrors.length === 0 ? true : false,\r\n        value: value,\r\n        errors: newErrors,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        className=\"container p-4\"\r\n        style={{ backgroundColor: \"rgba(44, 100, 50, 0.7)\" }}\r\n      >\r\n        <h2 className=\"text-center text-white\">\r\n          <u>\r\n            <strong>Student Details</strong>\r\n          </u>\r\n        </h2>\r\n        <h5 className=\"text-center text-white \">\r\n          Hello student! Please fill your details\r\n        </h5>\r\n        <hr />\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"mr-5\">\r\n            <Form.Label className=\"text-white\">\r\n              <u>Username</u>\r\n            </Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FaUserAlt />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                name=\"username\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Username\"\r\n                className={\r\n                  data.username.errors.length\r\n                    ? \"is-invalid alert-danger\"\r\n                    : \"\"\r\n                }\r\n                onBlur={validateInput}\r\n              />\r\n            </InputGroup>\r\n            <ErrorMessages errors={data.username.errors} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col}>\r\n            <Form.Label className=\"text-white\">\r\n              <u>Email</u>\r\n            </Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FaMailBulk />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                className={\r\n                  data.email.errors.length ? \"is-invalid alert-danger\" : \"\"\r\n                }\r\n                onBlur={validateInput}\r\n              />\r\n            </InputGroup>\r\n            <ErrorMessages errors={data.email.errors} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <Form.Label className=\"text-white\">\r\n              <u>Adress</u>\r\n            </Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FaCity />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                name=\"address\"\r\n                as=\"textarea\"\r\n                rows={3}\r\n                className={\r\n                  data.address.errors.length\r\n                    ? \"is-invalid alert-danger\"\r\n                    : \"\"\r\n                }\r\n                onBlur={validateInput}\r\n                placeholder=\"Street, Number, City, Zip \"\r\n              />\r\n            </InputGroup>\r\n            <ErrorMessages errors={data.address.errors} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group className=\"col mr-5\">\r\n            <Form.Label className=\"text-white\">\r\n              <u>Choose</u>\r\n            </Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <IoMdSchool />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as=\"select\"\r\n                name=\"course\"\r\n                defaultValue=\"\"\r\n                onChange={validateInput}\r\n                className={\r\n                  data.course.errors.length\r\n                    ? \"is-invalid alert-danger\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <option>Choose Course</option>\r\n                <option>JAVA</option>\r\n                <option>PYTHON</option>\r\n                <option>HTML</option>\r\n                <option>REACT</option>\r\n              </Form.Control>\r\n            </InputGroup>\r\n            <ErrorMessages errors={data.course.errors} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"col\">\r\n            <Form.Label className=\"text-white\">\r\n              <u>Gender</u>\r\n            </Form.Label>\r\n            <InputGroup>\r\n              <ButtonGroup toggle>\r\n                {radios.map((radio, idx) => (\r\n                  <ToggleButton\r\n                    key={idx}\r\n                    type=\"radio\"\r\n                    className={\r\n                      data.gender.errors.length\r\n                        ? \"is-invalid alert-danger\"\r\n                        : \"\"\r\n                    }\r\n                    variant=\"secondary\"\r\n                    name=\"gender\"\r\n                    value={radio.value}\r\n                    checked={radioValue === radio.value}\r\n                    onChange={validateInput}\r\n                  >\r\n                    {radio.name}\r\n                  </ToggleButton>\r\n                ))}\r\n              </ButtonGroup>\r\n            </InputGroup>\r\n            <ErrorMessages errors={data.gender.errors} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Button as={Col} type=\"submit\" variant=\"dark\" onClick={isValid}>\r\n            Submit\r\n          </Button>\r\n        </Form.Row>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StudentForm;\r\n","import Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useState } from \"react\";\r\nimport StudentForm from \"../StudentForm/StudentForm\";\r\n\r\nexport default function StudentsList({\r\n  students,\r\n  addStudent,\r\n  onPikingStudent,\r\n  studentToShow,\r\n}) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [wantSortList, setWantSortList] = useState(false);\r\n\r\n  const handleSort = () => setWantSortList(true);\r\n  const canceleSort = () => setWantSortList(false);\r\n\r\n  return (\r\n    <>\r\n      <h1\r\n        className=\"text-center font-weight-bolder\"\r\n        style={{ fontFamily: '\"Playfair Display\", serif', fontSize: \"10vh\" }}\r\n      >\r\n        Students Center\r\n      </h1>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center mt-4\">\r\n          <ol className=\" m-3 col-3\">\r\n            <div>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={handleShow}\r\n                className=\"mt-4 mx-1\"\r\n              >\r\n                Add Student\r\n              </Button>\r\n              {!wantSortList ? (\r\n                <Button\r\n                  variant=\"warning\"\r\n                  onClick={handleSort}\r\n                  className=\"mt-4 mx-1\"\r\n                >\r\n                  Sort by Name\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"warning\"\r\n                  onClick={canceleSort}\r\n                  className=\"mt-4 mx-1\"\r\n                >\r\n                  Stop Sorting\r\n                </Button>\r\n              )}\r\n            </div>\r\n            {(!wantSortList\r\n              ? students\r\n              : (students = students.sort((a, b) => {\r\n                  if (a.username < b.username) {\r\n                    return -1;\r\n                  }\r\n                  if (a.username > b.username) {\r\n                    return 1;\r\n                  }\r\n                  return 0;\r\n                }))\r\n            ).map((item, index) => {\r\n              return (\r\n                <>\r\n                  <li\r\n                    key={index}\r\n                    onClick={() => onPikingStudent(index)}\r\n                    className=\"mt-2 list-group-item text-center rounded list-group-item-action\"\r\n                  >\r\n                    {item.username}\r\n                  </li>\r\n                </>\r\n              );\r\n            })}\r\n            {\r\n              <Modal show={show} onHide={handleClose} className=\"\">\r\n                <Modal.Header\r\n                  closeButton\r\n                  className=\"position-absolute border-0\"\r\n                ></Modal.Header>\r\n                <StudentForm\r\n                  addStudent={addStudent}\r\n                  handleClose={handleClose}\r\n                />\r\n              </Modal>\r\n            }\r\n          </ol>\r\n          {studentToShow === -1 ? (\r\n            \"\"\r\n          ) : (\r\n            <Card\r\n              className=\"m-5 col-9 align-self-start\"\r\n              style={{ maxHeight: \"75vh\", maxWidth: \"75vh\" }}\r\n            >\r\n              <Card.Body className=\"d-block\">\r\n                <Card.Title\r\n                  className=\"text-center font-weight-bold font-italic\"\r\n                  style={{ fontSize: \"5vh\" }}\r\n                >\r\n                  {students[studentToShow].username}\r\n                </Card.Title>\r\n                <div className=\"border-black  border-top border-bottom\">\r\n                  <strong>Email:&nbsp;</strong> {students[studentToShow].email}\r\n                </div>\r\n                <div className=\"border-black  border-top border-bottom\">\r\n                  <strong>Course:&nbsp;</strong>{\" \"}\r\n                  {students[studentToShow].course}\r\n                </div>\r\n                <div className=\"border-black  border-top border-bottom\">\r\n                  <strong>Address:&nbsp;</strong>{\" \"}\r\n                  {students[studentToShow].address}\r\n                </div>\r\n                <div className=\"border-black  border-top border-bottom\">\r\n                  <strong>Gender:&nbsp;</strong>{\" \"}\r\n                  {students[studentToShow].gender}{\" \"}\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","\r\n\r\nconst studentsData = [\r\n    {\r\n        username:'brik',\r\n        email:'Arik@gmail.com',\r\n        course:'Jsx',\r\n        gender:'Male',\r\n        address:'Chiago 9 st',\r\n    },\r\n    {\r\n        username:'drik',\r\n        email:'Arik@gmail.com',\r\n        course:'Jsx',\r\n        gender:'Male',\r\n        address:'Chiago 9 st',\r\n    },\r\n    {\r\n        username:'arik',\r\n        email:'Arik@gmail.com',\r\n        course:'Jsx',\r\n        gender:'Male',\r\n        address:'Chiago 9 st',\r\n    },\r\n    {\r\n        username:'crik',\r\n        email:'Arik@gmail.com',\r\n        course:'Jsx',\r\n        gender:'Male',\r\n        address:'Chiago 9 st',\r\n    }\r\n\r\n]\r\n\r\n\r\nexport default studentsData","import StudentsList from \"./StudentList/StudentList\";\r\nimport { useState } from \"react\";\r\nimport studentsData from \"../../DAL/Students/data\";\r\n\r\nfunction Students() {\r\n  const [students, setStudents] = useState(studentsData);\r\n  const [studentToShow, setStudentToShow] = useState(-1);\r\n  let addStudent = (studentDetailObj) => {\r\n    setStudents([...students, studentDetailObj]);\r\n  };\r\n\r\n  const onPikingStudent = (key) => {\r\n    setStudentToShow(key);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StudentsList\r\n        students={students}\r\n        addStudent={addStudent}\r\n        onPikingStudent={onPikingStudent}\r\n        studentToShow={studentToShow}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Students;\r\n","import {useState, useEffect} from 'react'\r\n\r\nfunction RandomJokeBox(params) {\r\n\r\n    const [randomJoke, setRandomJoke] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch('http://api.icndb.com/jokes/random')\r\n        .then(response => response.json())\r\n        .then(joke =>{\r\n            setRandomJoke(joke.value.joke)\r\n        })\r\n    }, [])\r\n\r\n   \r\n    return <>\r\n    <h1>RandomJokeBox</h1>\r\n    <p>{randomJoke}</p>\r\n    </>\r\n}\r\n\r\n\r\nexport default RandomJokeBox","import Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\n\r\nfunction SelectInput({categoryList, name, onChoosingCategory}) {\r\n    return <>\r\n    <h1>SelectInput</h1>\r\n    <Form.Group className=\"col mr-5\">\r\n    <Form.Label className=\"text-white\">\r\n      <u>Choose</u>\r\n    </Form.Label>\r\n    <InputGroup>\r\n      <Form.Control\r\n        as=\"select\"\r\n        name={name}\r\n        defaultValue=\"\"\r\n        onChange={onChoosingCategory}\r\n      >\r\n        <option>Choose {name}</option>\r\n        {categoryList.map((optionName) => (\r\n          <option>{optionName}</option>\r\n        ))}\r\n      </Form.Control>\r\n    </InputGroup>\r\n  </Form.Group>;\r\n    </>\r\n}\r\n\r\n\r\nexport default SelectInput","import Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport {ImSearch} from 'react-icons/im'\r\n\r\n\r\nfunction SearchBox({onChangeSearchWord}) {\r\n    return <>\r\n    <h1>SearchBox</h1>\r\n    <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"basic-addon1\">\r\n          <ImSearch/>\r\n      </InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <Form.Control\r\n      placeholder=\"search\"\r\n      aria-label=\"search\"\r\n      aria-describedby=\"basic-addon1\"\r\n      onChange={onChangeSearchWord}\r\n    />\r\n  </InputGroup>\r\n    </>\r\n}\r\n\r\n\r\nexport default SearchBox","import InputGroup from 'react-bootstrap/InputGroup'\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nfunction DataInCategorySelectedToShow({dataToShow, searchWord}) {\r\n\r\n    return <>\r\n    <h1>DataInCategorySelectedToShow</h1>\r\n    <InputGroup>\r\n    <div className=\"overflow-auto m-5\" style={{width:'150vh',height:'70vh'}}>\r\n        <ul>\r\n            {searchWord ?\r\n            dataToShow\r\n            .filter(joke => joke.includes(searchWord))\r\n            .map(joke => <li><Highlighter searchWords={[searchWord]} textToHighlight={joke} autoEscape={true} highlightClassName='bg-warning'/></li>) :\r\n            dataToShow.map(joke => <li>{joke}</li>)}\r\n        </ul>\r\n        </div>\r\n  </InputGroup>\r\n    </>\r\n}\r\nexport default DataInCategorySelectedToShow","import {useState, useEffect} from 'react'\r\nimport RandomJokeBox from './RandomJokeBox'\r\nimport SelectInput from './SelectInput'\r\nimport SearchBox from './SearchBox'\r\nimport DataInCategorySelectedToShow from './DataInCategorySelectedToShow'\r\n\r\n\r\n\r\n\r\nfunction Chuck() {\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const [categorySelected, setCategorySelected] = useState([])\r\n    const [dataToShow, setDataToShow] = useState([])\r\n    const [searchWord, setSearchWord] = useState('')\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        fetch(`http://api.icndb.com/jokes/?limitTo=${categorySelected}`)\r\n        .then(response => response.json())\r\n        .then(jokes =>{\r\n            let jokesArr = jokes.value.map(joke => joke.joke)\r\n            setDataToShow(jokesArr)\r\n            console.log('a');\r\n        })  \r\n    }, [categorySelected] )\r\n\r\n    useEffect(() => {\r\n        fetch('http://api.icndb.com/categories')\r\n        .then(response => response.json())\r\n        .then(categorys =>{\r\n            setCategoryList(categorys.value)\r\n        })    \r\n    }, [])\r\n\r\n    const onChoosingCategory = ({target:{value}}) => {\r\n        setCategorySelected([value])\r\n    }\r\n    const onChangeSearchWord = ({target:{value}}) => {\r\n        setSearchWord(value)\r\n    }\r\n\r\n\r\n    \r\n    return <>\r\n    <h1>TITLE</h1>\r\n    <p>lorem</p>\r\n    <RandomJokeBox/>\r\n    <SelectInput categoryList={categoryList} name={'category'} onChoosingCategory={onChoosingCategory}/>\r\n    <SearchBox onChangeSearchWord={onChangeSearchWord}/>\r\n    <DataInCategorySelectedToShow dataToShow={dataToShow} searchWord={searchWord}/>\r\n    </>\r\n}\r\nexport default Chuck","\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport Home from './Components/Home/index'\r\nimport Quote from './Components/Quote/index'\r\nimport Voting from './Components/Voting/index'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Bmi from './Components/BMI/index'\r\nimport Students from './Components/Students/Students'\r\nimport Chuck from \"./Components/Chuck/Chuck\";\r\n\r\nfunction RouterCall() {\r\n    return( \r\n    <>\r\n        <Router>\r\n\r\n        \r\n            \r\n        <Navbar id=\"navbar\"> \r\n        <Navbar.Brand className='text-white'><Link to=\"protfolio/\" className='text-white text-decoration-none'>My Projects</Link></Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n      <Nav.Link ><Link to=\"protfolio/\">Home</Link></Nav.Link>\r\n      <Nav.Link ><Link to=\"protfolio//Voting\">Voting</Link></Nav.Link>\r\n      <Nav.Link><Link to=\"/protfolio/Quotes\">Quotes</Link></Nav.Link>\r\n      <Nav.Link><Link to=\"protfolio//Students\">Students</Link></Nav.Link>\r\n      <Nav.Link><Link to=\"protfolio//Bmi\">Bmi</Link></Nav.Link>\r\n      <Nav.Link><Link to=\"protfolio//Chuck\">Chuck</Link></Nav.Link>\r\n    </Nav>\r\n          </Navbar>\r\n        \r\n        \r\n\r\n        <Switch>\r\n          <Route path=\"protfolio/Voting\">\r\n            <Voting />\r\n          </Route>\r\n          <Route path=\"protfolio/Quotes\">\r\n        <Quote />\r\n          </Route>\r\n          <Route path=\"protfolio/Students\">\r\n            <Students />\r\n          </Route>\r\n          <Route path=\"protfolio/Bmi\">\r\n            <Bmi />\r\n          </Route>\r\n          <Route path=\"protfolio/Chuck\">\r\n            <Chuck />\r\n          </Route>\r\n          <Route path=\"protfolio/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n       \r\n\r\n    </Router>\r\n\r\n    </>\r\n  )\r\n    }\r\n\r\nexport default RouterCall","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport RouterCall from './AppRouter';\n// import StudentForm from './Components/Students/StudentForm/StudentForm';\n\nfunction App() {\n  return (\n    <>\n    <RouterCall/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}