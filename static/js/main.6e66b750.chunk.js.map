{"version":3,"sources":["Components/Home/index.js","DAL/Quote/data.js","Components/Quote/QuoteCard.js","Components/Quote/index.js","DAL/Voting/data.js","Components/Voting/VotingCard.js","Components/Voting/index.js","Components/BMI/BmiCalculator.js","DAL/BMI/bmiAlgoritem.js","Components/BMI/ResultBmi.js","Components/BMI/index.js","Components/Students/StudentForm/ErrorMessages.js","Components/Students/StudentForm/StudentForm.js","Components/Students/StudentList/StudentList.js","Functions/Random/random.js","DAL/Students/data.js","Components/Students/Students.js","Components/Chuck/RandomJokeBox.js","Components/Chuck/SelectInput.js","Components/Chuck/SearchBox.js","Components/Chuck/DataInCategorySelectedToShow.js","Components/Chuck/Chuck.js","AppRouter.js","App.js","index.js"],"names":["Home","Container","className","id","style","fontSize","Button","variant","href","target","quotesData","quote","maker","ImgesForQuotes","QuoteCard","currQuote","currImg","Card","Header","Body","backgroundColor","title","Math","floor","random","Quote","randomNumber","lengthToTake","useState","length","currQuoteAndColor","setCurrQuoteAndColor","onClick","VotingData","name","img","votes","comments","VotingCard","item","currComment","changeVoteCount","addComment","changeCurrComment","index","width","Img","src","Title","color","value","e","InputGroup","FormControl","placeholder","aria-label","defaultValue","onBlur","Append","ListGroup","map","comment","Item","Voting","items","setItems","setCurrComment","useEffect","Row","sort","a","b","reverse","Col","objName","push","upOrDown","BmiCalculator","onParameters","parameters","isOkToShow","Form","Object","keys","parameter","Group","Label","Control","type","BMI","weight","height","toFixed","ResultBmi","Text","rel","Bmi","setParameters","okToShow","setOkToShow","ErrorMessages","errors","error","StudentForm","addStudent","handleClose","radioValue","setRadioValue","email","valid","validations","required","pattern","username","address","course","gender","data","setData","validateInput","newErrors","test","onSubmit","preventDefault","as","Prepend","rows","onChange","ButtonGroup","toggle","radio","idx","ToggleButton","checked","wrongInfoCnt","detailsObj","key","StudentsList","max","min","students","onPikingStudent","studentToShow","show","setShow","wantSortList","setWantSortList","fontFamily","Modal","onHide","closeButton","class","ceil","studentsData","Students","setStudents","setStudentToShow","studentDetailObj","RandomJokeBox","params","randomJoke","setRandomJoke","fetch","then","response","json","joke","SelectInput","categoryList","onChoosingCategory","optionName","SearchBox","onChangeSearchWord","aria-describedby","DataInCategorySelectedToShow","dataToShow","searchWord","filter","includes","searchWords","textToHighlight","autoEscape","highlightClassName","Chuck","setCategoryList","categorySelected","setCategorySelected","setDataToShow","setSearchWord","jokes","jokesArr","console","log","categorys","RouterCall","basename","Navbar","Brand","to","Nav","Link","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e66b750.chunk.js","sourcesContent":["import Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function Home() {\r\n    return <>\r\n        <Container className='text-center mt-5 mainTitle' id='HomeContainer'>\r\n        <div>\r\n         <h1 className=''>My Projects</h1>\r\n         <h3 className='my-1 componentTitle' style={{fontSize:'100px'}}>veni vidi vici</h3>\r\n         <Button className='my-4' variant='info' href=\"https://www.linkedin.com/in/itiel-yakira/\" target='_blank'>   Learn More About Me </Button>\r\n        </div>\r\n        </Container>\r\n    </>\r\n}","const quotesData =[\r\n    {\r\n        quote:'“Be yourself; everyone else is already taken.”',\r\n        maker:'Oscar Wilde'\r\n    },\r\n    {\r\n        quote:'“Two things are infinite: the universe and human stupidity; and Im not sure about the universe.” ',\r\n        maker:'Albert Einstein'\r\n    },\r\n    {\r\n        quote:'“So many books, so little time.”',\r\n        maker:' Frank Zappa'\r\n    },\r\n    {\r\n        quote:'“A room without books is like a body without a soul.”',\r\n        maker:' Marcus Tullius Cicero'\r\n    },\r\n]\r\n\r\n\r\nconst ImgesForQuotes =[\r\n    '#FFAEBC',\r\n    '#A0E7E5',\r\n    'yellow',\r\n    '#B4F8C8',\r\n    '#FBE7C6',\r\n    '#EEEDE7',\r\n    '#E08955'\r\n]\r\n\r\nexport {ImgesForQuotes, quotesData}","import Card from 'react-bootstrap/Card'\r\n\r\n\r\n\r\n\r\nfunction QuoteCard({currQuote, currImg}) {\r\n    \r\n    \r\n    return (\r\n<Card className='w-25'>\r\n  <Card.Header>Quote</Card.Header>\r\n  <Card.Body style={{backgroundColor:`${currImg}`}}>\r\n    <blockquote className=\"blockquote mb-0\">\r\n      <p>\r\n        {' '}\r\n        {currQuote.quote}{' '}\r\n      </p>\r\n      <footer className=\"blockquote-footer\">\r\n        {currQuote.maker} <cite title=\"Source Title\">{Math.floor(Math.random()*2021)}bc</cite>\r\n      </footer>\r\n    </blockquote>\r\n  </Card.Body>\r\n</Card>\r\n    ) \r\n}\r\n\r\nexport default QuoteCard","import {ImgesForQuotes, quotesData} from '../../DAL/Quote/data'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {useState} from 'react'\r\nimport QuoteCard from './QuoteCard'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nfunction Quote() {\r\n    const randomNumber = (lengthToTake) => Math.floor(Math.random() * lengthToTake)\r\n\r\n    \r\n    let [currQuoteAndColor, setCurrQuoteAndColor] = useState({\r\n        currImg:ImgesForQuotes[randomNumber(ImgesForQuotes.length)],\r\n        currQuote:quotesData[randomNumber(quotesData.length)]\r\n    })\r\n    \r\n    function onChangeQuote() {\r\n        setCurrQuoteAndColor({\r\n            currImg:ImgesForQuotes[randomNumber(ImgesForQuotes.length)],\r\n            currQuote:quotesData[randomNumber(quotesData.length)]\r\n        })\r\n    }\r\n    \r\n    return <>\r\n    <h1 className='text-center mainTitle'>Students Center</h1>\r\n    <div className='d-flex justify-content-center align-items-center flex-column my-4'>\r\n\r\n        <QuoteCard currImg={currQuoteAndColor.currImg}  currQuote={currQuoteAndColor.currQuote}/>\r\n            <Button className=\"mx-auto my-4\" onClick={() => onChangeQuote()} >\r\n                Change Quote\r\n            </Button>\r\n            </div>\r\n    </>\r\n}\r\n\r\nexport default Quote","const VotingData = [\r\n    {\r\n        name:'batman',\r\n        img:'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.XxRrkxXPB7iGoYFlKZHp7AHaHa%26pid%3DApi&f=1',\r\n        votes:0,\r\n        comments:[]\r\n    },\r\n    {\r\n        name:'superman',\r\n        img:'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.HH6UujJZqKzBfZU5u-jcQgHaHa%26pid%3DApi&f=1',\r\n        votes:0,\r\n        comments:[]\r\n    },\r\n    {\r\n        name:'spiderman',\r\n        img:'https://i.pinimg.com/originals/32/04/6c/32046c6fb666d7b3c2525190e4fc4575.jpg',\r\n        votes:0,\r\n        comments:[]\r\n    }\r\n]\r\n\r\n\r\nexport default VotingData","\r\n\r\nimport React from \"react\";\r\nimport Card  from \"react-bootstrap/Card\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport {AiFillDislike, AiFillLike, AiOutlineNumber} from 'react-icons/ai'\r\nimport {BiMedal} from 'react-icons/bi'\r\nfunction VotingCard({ item,currComment, changeVoteCount, addComment, changeCurrComment, index}) {\r\n\r\n  return (\r\n    <Card className=\"text-center\" style={{ width: \"20rem\" }}>\r\n      <Card.Img variant=\"top\" src={`${item.img}`} />\r\n        <Card.Header><strong>Vote count: {item.votes}</strong></Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>{item.name}</Card.Title>\r\n        <Card.Title><AiOutlineNumber/>{index + 1}<span>{\r\n            index === 0 ? <BiMedal style={{color:'gold'}}/>\r\n            : index === 1 ? <BiMedal style={{color:'silver'}}/>\r\n            : index === 2 ? <BiMedal style={{color:'brown'}}/>\r\n            : \"\"\r\n            }</span></Card.Title>\r\n        <Button className='mx-1' value='👍' variant=\"info\" onClick={(e) => changeVoteCount(item.name, e.target.value)}>\r\n        <AiFillLike/>\r\n        </Button>\r\n        <Button className='mx-1' value='👎' variant=\"info\" onClick={(e) => changeVoteCount(item.name, e.target.value)}>\r\n          <AiFillDislike/>\r\n        </Button>\r\n\r\n        <InputGroup className=\"my-3\">\r\n    <FormControl\r\n      placeholder=\"Comment Here\"\r\n      aria-label=\"Comment\"\r\n      defaultValue={\"\"}\r\n      onBlur={(e) => changeCurrComment(e.target.value)}\r\n    />\r\n    <InputGroup.Append>\r\n      <Button variant=\"outline-secondary\" onClick={() => addComment(item.name,currComment)}>Add Comment</Button>\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\n      \r\n\r\n  <ListGroup>\r\n      {item.comments.map((comment, index )=> <ListGroup.Item key={index}>{comment}</ListGroup.Item>)}\r\n    </ListGroup>\r\n\r\n\r\n\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nexport default VotingCard;","import React, { useEffect, useState } from \"react\";\r\nimport  Container from \"react-bootstrap/Container\";\r\nimport  Col  from \"react-bootstrap/Col\";\r\nimport  Row from \"react-bootstrap/Row\";\r\nimport VotingData from \"../../DAL/Voting/data\";\r\nimport VotingCard from \"./VotingCard\";\r\n\r\nfunction Voting() {\r\n    let [items, setItems] = useState([]);\r\n    let [currComment, setCurrComment]= useState('')\r\n    \r\n    function changeCurrComment(comment) {\r\n        setCurrComment(comment)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setItems(VotingData);\r\n      }, []);\r\n\r\n      function changeVoteCount(objName, upOrDown) {\r\n        items = items.map((item) => {\r\n          if (item.name === objName) {\r\n              if(upOrDown === '👍'){\r\n                  item.votes += 1;\r\n              }else if(upOrDown === '👎'){\r\n                  item.votes -= 1;\r\n              }\r\n          }\r\n          return item;\r\n        });\r\n        setItems(items);\r\n      }\r\n\r\n      function addComment(objName,comment) {\r\n        items = items.map((item) => {\r\n            if (item.name === objName && comment) {\r\n              item.comments.push(comment);\r\n              setCurrComment('')\r\n            }\r\n            return item;\r\n          });\r\n          setItems(items);\r\n        }\r\n      \r\n    \r\n    return<>\r\n            <h1 className='mx-auto text-center mainTitle'>Voting App</h1>\r\n\r\n            <h4 className=\"text-white text-center\"> Choose Your Favorite Hero</h4>\r\n        <Container>\r\n            <Row>\r\n            {items.sort((a ,b) => a.votes - b.votes).reverse().map((item, index) => {\r\n                return(\r\n                <Col>\r\n                <VotingCard\r\n                index={index} \r\n                item={item} \r\n                currComment={currComment}\r\n                changeCurrComment={(comment) => changeCurrComment(comment)}\r\n                addComment={(objName,comment) => addComment(objName,comment)}\r\n                changeVoteCount={(objName, upOrDown) => changeVoteCount(objName, upOrDown)}/>\r\n                </Col>\r\n                )\r\n            })}\r\n            </Row>\r\n            \r\n            \r\n        </Container>\r\n\r\n    </>\r\n}\r\n\r\nexport default Voting","import Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction BmiCalculator({onParameters, parameters, isOkToShow}) {\r\n    return <>\r\n    <Form className=\"container my-4 col-4\">\r\n {(Object.keys(parameters)).map(parameter =>\r\n\r\n    (<Form.Group>\r\n       <Form.Label style={{fontSize:'43px'}}>{parameter}</Form.Label>\r\n       <Form.Control className='' onBlur={e => onParameters(e.target.name, e.target.value)} name={parameter} type=\"number\" placeholder={`Enter ${parameter}`} />\r\n     </Form.Group>)\r\n )}\r\n\r\n  <Button variant=\"info\" type=\"button\" onClick={() => isOkToShow()}>\r\n    Submit\r\n  </Button>\r\n</Form>\r\n</>\r\n}\r\n\r\nexport default BmiCalculator\r\n","const BMI = (weight, height) =>  (weight / ((height/100)**2)).toFixed(1)\r\n\r\n\r\nexport default BMI","import BMI from '../../DAL/BMI/bmiAlgoritem'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction ResultBmi({parameters}) {\r\n    return <>\r\n    <Card className='border border-black' style={{ width: '18rem' }}>\r\n  <Card.Img variant=\"top\" src=\"https://img.pixers.pics/pho_wat(s3:700/FO/43/94/40/16/700_FO43944016_8afb689febd6d5a6abd6f6be2239e52a.jpg,700,580,cms:2018/10/5bd1b6b8d04b8_220x50-watermark.png,over,480,530,jpg)/stickers-fat-boy-with-burger-and-hot-dog.jpg.jpg\" />\r\n  <Card.Body>\r\n    <Card.Title>You Are fat</Card.Title>\r\n    <Card.Text>\r\n    <h3>Your BMI IS: {BMI(parameters.weight, parameters.height)}</h3>\r\n      you are in danger pleace checkj our diet menu.\r\n    </Card.Text>\r\n    <Button variant=\"primary\"><a className='text-white' target='_blank' rel='noreferrer' href='https://cdn.vox-cdn.com/thumbor/-460i09zo22nGbnFWXWPU3NK32g=/0x0:800x727/1200x0/filters:focal(0x0:800x727)/cdn.vox-cdn.com/uploads/chorus_asset/file/6751989/menuv.0.jpg'>diet menu</a></Button>\r\n  </Card.Body>\r\n</Card>\r\n    </>\r\n}\r\n\r\nexport default ResultBmi","import BmiCalculator from './BmiCalculator'\r\nimport {useState} from 'react'\r\nimport ResultBmi from './ResultBmi'\r\n\r\nfunction Bmi() {\r\n\r\n    const [parameters, setParameters] = useState({\r\n        weight:0,\r\n        height:0\r\n    })\r\n\r\n    let [okToShow, setOkToShow] = useState(false)\r\n\r\n    function onParameters(name,value) {\r\n        if(value){\r\n            setParameters({...parameters,[name]:value})\r\n    }\r\n    }\r\n\r\n    function isOkToShow() {\r\n        setOkToShow(parameters.weight !== 0 && parameters.height !== 0)\r\n    }\r\n\r\n    return <>\r\n    <h1 className='mx-auto text-center mainTitle' style={{fontSize:'100px'}} >Your BMI</h1>\r\n    <div className='d-flex container'>\r\n    <BmiCalculator onParameters={onParameters}  parameters={parameters} isOkToShow={isOkToShow}/>\r\n\r\n    {okToShow && <ResultBmi parameters={parameters}/>}\r\n    </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default Bmi","function ErrorMessages({ errors }) {\r\n  return errors.map((error, index) => (\r\n    <small key={index} className=\"form-text text-mute\">\r\n      {error}\r\n    </small>\r\n  ));\r\n}\r\n\r\nexport default ErrorMessages;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport { useState } from \"react\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport { FaUserAlt, FaMailBulk, FaCity } from \"react-icons/fa\";\r\nimport { IoMdSchool } from \"react-icons/io\";\r\nimport ErrorMessages from \"./ErrorMessages\";\r\n\r\nfunction StudentForm({ addStudent, handleClose }) {\r\n  \r\n  const [radioValue, setRadioValue] = useState(\"\");\r\n\r\n  const radios = [\r\n    { name: `Male`, value: `Male` },\r\n    { name: \"Female\", value: \"Female\" },\r\n    { name: \"Other\", value: \"Other\" },\r\n  ];\r\n\r\n  let isValid = (e) => {\r\n    let wrongInfoCnt = 0;\r\n    let detailsObj = {};\r\n    for (const key in data) {\r\n      const value = data[key].value || \"\";\r\n      const name = key;\r\n      if (!value) {\r\n        wrongInfoCnt++;\r\n        validateInput({ target: { value, name } });\r\n      } else {\r\n        detailsObj[name] = value;\r\n      }\r\n    }\r\n    if (wrongInfoCnt === 0) {\r\n      addStudent(detailsObj);\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const [data, setData] = useState({\r\n    email: {\r\n      value: \"\",\r\n      errors: [],\r\n      valid: false,\r\n      validations: {\r\n        required: true,\r\n        pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n      },\r\n    },\r\n    username: {\r\n      value: \"\",\r\n      errors: [],\r\n      valid: false,\r\n      validations: {\r\n        required: true,\r\n        pattern: /^[a-zA-Z0-9]{2,}$/,\r\n      },\r\n    },\r\n    address: {\r\n      value: \"\",\r\n      errors: [],\r\n      valid: false,\r\n      validations: {\r\n        required: true,\r\n        pattern: /^[a-zA-Z0-9\\s,.'-]{10,}$/,\r\n      },\r\n    },\r\n    course: {\r\n      value: \"\",\r\n      errors: [],\r\n      valid: false,\r\n      validations: {\r\n        required: true,\r\n      },\r\n    },\r\n    gender: {\r\n      value: \"\",\r\n      valid: false,\r\n      errors: [],\r\n      validations: {\r\n        required: true,\r\n      },\r\n    },\r\n  });\r\n\r\n  const validateInput = ({ target: { value, name } }) => {\r\n    const newErrors = [];\r\n    const { validations } = data[name];\r\n\r\n    if (validations.required && !value) {\r\n      newErrors.push(`${name} is required`);\r\n    }\r\n    if (validations.pattern && !validations.pattern.test(value)) {\r\n      if (name === \"username\") {\r\n        newErrors.push(\"User name need to be 2 or more char\");\r\n      } else if (name === \"address\") {\r\n        newErrors.push(\"User name need to be 10 or more char\");\r\n      } else {\r\n        newErrors.push(`Invalid ${name} value`);\r\n      }\r\n    }\r\n    if (name === \"gender\") {\r\n      setRadioValue(value);\r\n    }\r\n\r\n    if (value === \"Choose Course\") {\r\n      newErrors.push(`${name} is required`);\r\n    }\r\n\r\n    setData((data) => ({\r\n      ...data,\r\n      [name]: {\r\n        ...data[name],\r\n        valid: newErrors.length === 0 ? true : false,\r\n        value: value,\r\n        errors: newErrors,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        className=\"container p-4\"\r\n        style={{ backgroundColor: \"rgba(44, 100, 50, 0.7)\" }}\r\n      >\r\n        <h2 className=\"text-center text-white\">\r\n          <u>\r\n            <strong>Student Details</strong>\r\n          </u>\r\n        </h2>\r\n        <h5 className=\"text-center text-white \">\r\n          Hello student! Please fill your details\r\n        </h5>\r\n        <hr />\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"mr-5\">\r\n            <Form.Label className=\"text-white\">\r\n              <u>Username</u>\r\n            </Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FaUserAlt />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                name=\"username\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Username\"\r\n                className={\r\n                  data.username.errors.length\r\n                    ? \"is-invalid alert-danger\"\r\n                    : \"\"\r\n                }\r\n                onBlur={validateInput}\r\n              />\r\n            </InputGroup>\r\n            <ErrorMessages errors={data.username.errors} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col}>\r\n            <Form.Label className=\"text-white\">\r\n              <u>Email</u>\r\n            </Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FaMailBulk />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                className={\r\n                  data.email.errors.length ? \"is-invalid alert-danger\" : \"\"\r\n                }\r\n                onBlur={validateInput}\r\n              />\r\n            </InputGroup>\r\n            <ErrorMessages errors={data.email.errors} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <Form.Label className=\"text-white\">\r\n              <u>Adress</u>\r\n            </Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FaCity />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                name=\"address\"\r\n                as=\"textarea\"\r\n                rows={3}\r\n                className={\r\n                  data.address.errors.length\r\n                    ? \"is-invalid alert-danger\"\r\n                    : \"\"\r\n                }\r\n                onBlur={validateInput}\r\n                placeholder=\"Street, Number, City, Zip \"\r\n              />\r\n            </InputGroup>\r\n            <ErrorMessages errors={data.address.errors} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group className=\"col mr-5\">\r\n            <Form.Label className=\"text-white\">\r\n              <u>Choose</u>\r\n            </Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <IoMdSchool />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as=\"select\"\r\n                name=\"course\"\r\n                defaultValue=\"\"\r\n                onChange={validateInput}\r\n                className={\r\n                  data.course.errors.length\r\n                    ? \"is-invalid alert-danger\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <option>Choose Course</option>\r\n                <option>JAVA</option>\r\n                <option>PYTHON</option>\r\n                <option>HTML</option>\r\n                <option>REACT</option>\r\n              </Form.Control>\r\n            </InputGroup>\r\n            <ErrorMessages errors={data.course.errors} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"col\">\r\n            <Form.Label className=\"text-white\">\r\n              <u>Gender</u>\r\n            </Form.Label>\r\n            <InputGroup>\r\n              <ButtonGroup toggle>\r\n                {radios.map((radio, idx) => (\r\n                  <ToggleButton\r\n                    key={idx}\r\n                    type=\"radio\"\r\n                    className={\r\n                      data.gender.errors.length\r\n                        ? \"is-invalid alert-danger\"\r\n                        : \"\"\r\n                    }\r\n                    variant=\"secondary\"\r\n                    name=\"gender\"\r\n                    value={radio.value}\r\n                    checked={radioValue === radio.value}\r\n                    onChange={validateInput}\r\n                  >\r\n                    {radio.name}\r\n                  </ToggleButton>\r\n                ))}\r\n              </ButtonGroup>\r\n            </InputGroup>\r\n            <ErrorMessages errors={data.gender.errors} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Button as={Col} type=\"submit\" variant=\"dark\" onClick={isValid}>\r\n            Submit\r\n          </Button>\r\n        </Form.Row>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StudentForm;\r\n","import Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useState } from \"react\";\r\nimport StudentForm from \"../StudentForm/StudentForm\";\r\nimport getRandomInt from \"../../../Functions/Random/random\";\r\n\r\nexport default function StudentsList({\r\n  students,\r\n  addStudent,\r\n  onPikingStudent,\r\n  studentToShow,\r\n}) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [wantSortList, setWantSortList] = useState(false);\r\n\r\n  const handleSort = () => setWantSortList(true);\r\n  const canceleSort = () => setWantSortList(false);\r\n\r\n  return (\r\n    <>\r\n      <h1\r\n        className=\"text-center font-weight-bolder\"\r\n        style={{ fontFamily: '\"Playfair Display\", serif', fontSize: \"10vh\" }}\r\n      >\r\n        Students Center\r\n      </h1>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center mt-4\">\r\n          <ol className=\" m-3 col-3 list-group list-group-numbered\">\r\n            <div>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={handleShow}\r\n                className=\"mt-4 mx-1\"\r\n              >\r\n                Add Student\r\n              </Button>\r\n              {!wantSortList ? (\r\n                <Button\r\n                  variant=\"warning\"\r\n                  onClick={handleSort}\r\n                  className=\"mt-4 mx-1\"\r\n                >\r\n                  Sort by Name\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"warning\"\r\n                  onClick={canceleSort}\r\n                  className=\"mt-4 mx-1\"\r\n                >\r\n                  Stop Sorting\r\n                </Button>\r\n              )}\r\n            </div>\r\n            {(!wantSortList\r\n              ? students\r\n              : (students = students.sort((a, b) => {\r\n                  if (a.username < b.username) {\r\n                    return -1;\r\n                  }\r\n                  if (a.username > b.username) {\r\n                    return 1;\r\n                  }\r\n                  return 0;\r\n                }))\r\n            ).map((item, index) => {\r\n              return (\r\n                <>\r\n                  <li\r\n                    key={index}\r\n                    onClick={() => onPikingStudent(index)}\r\n                    className=\"mt-2 list-group-item text-center rounded list-group-item-action\"\r\n                  >\r\n                    {item.username}\r\n                  </li>\r\n                </>\r\n              );\r\n            })}\r\n            {\r\n              <Modal show={show} onHide={handleClose} className=\"\">\r\n                <Modal.Header\r\n                  closeButton\r\n                  className=\"position-absolute border-0\"\r\n                ></Modal.Header>\r\n                <StudentForm\r\n                  addStudent={addStudent}\r\n                  handleClose={handleClose}\r\n                />\r\n              </Modal>\r\n            }\r\n          </ol>\r\n          {studentToShow === -1 ? (\r\n            \"\"\r\n          ) : (\r\n            // <Card\r\n            //   className=\"m-5 col-9 align-self-start\"\r\n            //   style={{ maxHeight: \"75vh\", maxWidth: \"75vh\" }}\r\n            // >\r\n            //   <Card.Body className=\"d-block\">\r\n            //     <Card.Title\r\n            //       className=\"text-center font-weight-bold font-italic\"\r\n            //       style={{ fontSize: \"5vh\" }}\r\n            //     >\r\n            //       {students[studentToShow].username}\r\n            //     </Card.Title>\r\n                \r\n\r\n<div class=\"st m-5 col-4 align-self-start\">\r\n  <div class=\"avatar-flip\">\r\n    <img className='student' src={`https://randomuser.me/api/portraits/${students[studentToShow].gender === 'Male'? 'men':'women'}/${getRandomInt(99,10)}.jpg`} height=\"150\" width=\"150\"></img>\r\n    <img className='student' src=\"https://raw.githubusercontent.com/laudep/code-gif-generator/master/docs/img/generating.gif\" height=\"150\" width=\"150\"></img>\r\n  </div>\r\n  <h1 className='student'>{students[studentToShow].username}</h1>\r\n  <div className='d-flex flex-column text-left'>\r\n  <p className='student'><strong>Course:&nbsp;</strong>{\" \"}{students[studentToShow].course}</p>\r\n  <p className='student'><strong>address:&nbsp;</strong>{\" \"}{students[studentToShow].address}</p>\r\n  <p className='student'><strong>gender:&nbsp;</strong>{\" \"}{students[studentToShow].gender}</p>\r\n  <p className='student'><strong>email:&nbsp;</strong>{\" \"}{students[studentToShow].email}</p>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n            //     <div className=\"border-black  border-top border-bottom\">\r\n            //       <strong>Email:&nbsp;</strong> {students[studentToShow].email}\r\n            //     </div>\r\n            //     <div className=\"border-black  border-top border-bottom\">\r\n            //       <strong>Course:&nbsp;</strong>{\" \"}\r\n            //       {students[studentToShow].course}\r\n            //     </div>\r\n            //     <div className=\"border-black  border-top border-bottom\">\r\n            //       <strong>Address:&nbsp;</strong>{\" \"}\r\n            //       {students[studentToShow].address}\r\n            //     </div>\r\n            //     <div className=\"border-black  border-top border-bottom\">\r\n            //       <strong>Gender:&nbsp;</strong>{\" \"}\r\n            //       {students[studentToShow].gender}{\" \"}\r\n            //     </div>\r\n            //   </Card.Body>\r\n            // </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export default function getRandomInt(max, min) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}","\r\n\r\nconst studentsData = [\r\n    {\r\n        username:'brik',\r\n        email:'Arik@gmail.com',\r\n        course:'Jsx',\r\n        gender:'Male',\r\n        address:'Chiago 9 st',\r\n    },\r\n    {\r\n        username:'drik',\r\n        email:'Arik@gmail.com',\r\n        course:'Jsx',\r\n        gender:'Male',\r\n        address:'Chiago 9 st',\r\n    },\r\n    {\r\n        username:'arik',\r\n        email:'Arik@gmail.com',\r\n        course:'Jsx',\r\n        gender:'Male',\r\n        address:'Chiago 9 st',\r\n    },\r\n    {\r\n        username:'crik',\r\n        email:'Arik@gmail.com',\r\n        course:'Jsx',\r\n        gender:'Male',\r\n        address:'Chiago 9 st',\r\n    }\r\n\r\n]\r\n\r\n\r\nexport default studentsData","import StudentsList from \"./StudentList/StudentList\";\r\nimport { useState } from \"react\";\r\nimport studentsData from \"../../DAL/Students/data\";\r\n\r\nfunction Students() {\r\n  const [students, setStudents] = useState(studentsData);\r\n  const [studentToShow, setStudentToShow] = useState(-1);\r\n  let addStudent = (studentDetailObj) => {\r\n    setStudents([...students, studentDetailObj]);\r\n  };\r\n\r\n  const onPikingStudent = (key) => {\r\n    setStudentToShow(key);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StudentsList\r\n        students={students}\r\n        addStudent={addStudent}\r\n        onPikingStudent={onPikingStudent}\r\n        studentToShow={studentToShow}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Students;\r\n","import {useState, useEffect} from 'react'\r\n\r\nfunction RandomJokeBox(params) {\r\n\r\n    const [randomJoke, setRandomJoke] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch('http://api.icndb.com/jokes/random')\r\n        .then(response => response.json())\r\n        .then(joke =>{\r\n            setRandomJoke(joke.value.joke)\r\n        })\r\n    }, [])\r\n\r\n   \r\n    return <>\r\n    <div className='container'>\r\n    <h2 className='text-warning'>RandomJokeBox</h2>\r\n    <p>{randomJoke}</p>\r\n    </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default RandomJokeBox","import Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\n\r\nfunction SelectInput({categoryList, name, onChoosingCategory}) {\r\n    return <>\r\n    <div className='container'>\r\n    <h2>Joke Category</h2>\r\n    <div className=''>\r\n    <Form.Group className=\"col m-5\">\r\n    <InputGroup>\r\n      <Form.Control\r\n        as=\"select\"\r\n        name={name}\r\n        defaultValue=\"\"\r\n        onChange={onChoosingCategory}\r\n      >\r\n        <option>Choose {name}</option>\r\n        {categoryList.map((optionName) => (\r\n          <option>{optionName}</option>\r\n        ))}\r\n      </Form.Control>\r\n    </InputGroup>\r\n  </Form.Group>;\r\n  </div>\r\n  </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default SelectInput","import Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport {ImSearch} from 'react-icons/im'\r\n\r\n\r\nfunction SearchBox({onChangeSearchWord}) {\r\n    return <>\r\n    <div className='col-3'>\r\n    <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"basic-addon1\">\r\n          <ImSearch/>\r\n      </InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <Form.Control\r\n      placeholder=\"search\"\r\n      aria-label=\"search\"\r\n      aria-describedby=\"basic-addon1\"\r\n      onChange={onChangeSearchWord}\r\n    />\r\n  </InputGroup>\r\n  </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default SearchBox","import InputGroup from 'react-bootstrap/InputGroup'\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nfunction DataInCategorySelectedToShow({dataToShow, searchWord}) {\r\n\r\n    return <>\r\n    <InputGroup className=\"col\">\r\n    <div className=\"overflow-auto m-5 border border-5 bg-white\" style={{width:'100vh',height:'50vh'}}>\r\n        <ul>\r\n            {searchWord ?\r\n            dataToShow\r\n            .filter(joke => joke.includes(searchWord))\r\n            .map(joke => <li><Highlighter searchWords={[searchWord]} textToHighlight={joke} autoEscape={true} highlightClassName='bg-warning'/></li>) :\r\n            dataToShow.map(joke => <li>{joke}</li>)}\r\n        </ul>\r\n        </div>\r\n  </InputGroup>\r\n    </>\r\n}\r\nexport default DataInCategorySelectedToShow","import {useState, useEffect} from 'react'\r\nimport RandomJokeBox from './RandomJokeBox'\r\nimport SelectInput from './SelectInput'\r\nimport SearchBox from './SearchBox'\r\nimport DataInCategorySelectedToShow from './DataInCategorySelectedToShow'\r\n\r\n\r\n\r\n\r\nfunction Chuck() {\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const [categorySelected, setCategorySelected] = useState([])\r\n    const [dataToShow, setDataToShow] = useState([])\r\n    const [searchWord, setSearchWord] = useState('')\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        fetch(`http://api.icndb.com/jokes/?limitTo=${categorySelected}`)\r\n        .then(response => response.json())\r\n        .then(jokes =>{\r\n            let jokesArr = jokes.value.map(joke => joke.joke)\r\n            setDataToShow(jokesArr)\r\n            console.log('a');\r\n        })  \r\n    }, [categorySelected] )\r\n\r\n    useEffect(() => {\r\n        fetch('http://api.icndb.com/categories')\r\n        .then(response => response.json())\r\n        .then(categorys =>{\r\n            setCategoryList(categorys.value)\r\n        })    \r\n    }, [])\r\n\r\n    const onChoosingCategory = ({target:{value}}) => {\r\n        setCategorySelected([value])\r\n    }\r\n    const onChangeSearchWord = ({target:{value}}) => {\r\n        setSearchWord(value)\r\n    }\r\n\r\n\r\n    \r\n    return <>\r\n    <h1 className='mainTitle text-center'>Norris Jokes</h1>\r\n    <p className='container'>A warm welcome message works like a charm in any situation, be it the recruitment of a new employee or having returning ones back, or meeting friends after a long time! Welcome messages are also appreciated in more formal settings like welcoming a guest or customer. Whatever the arrangement is, these notes convey your excitement and happiness towards the other parties and help them settle in more comfortably. So if you have a new party to meet and greet them cordially, pass along a sweet, meaningful welcome message while offering them a genuine smile! Perfect welcome messages can be hard to find, so help yourselves with a compilation of unique welcoming messages and notes below!</p>\r\n    <RandomJokeBox/>\r\n    <SelectInput categoryList={categoryList} name={'category'} onChoosingCategory={onChoosingCategory}/>\r\n    <div className='d-flex'>\r\n    <SearchBox onChangeSearchWord={onChangeSearchWord}/>\r\n    <DataInCategorySelectedToShow dataToShow={dataToShow} searchWord={searchWord}/>\r\n    </div>\r\n    </>\r\n}\r\nexport default Chuck","\r\nimport {HashRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport Home from './Components/Home/index'\r\nimport Quote from './Components/Quote/index'\r\nimport Voting from './Components/Voting/index'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Bmi from './Components/BMI/index'\r\nimport Students from './Components/Students/Students'\r\nimport Chuck from \"./Components/Chuck/Chuck\";\r\n\r\nfunction RouterCall() {\r\n    return( \r\n    <>\r\n        <Router basename='/protfolio'>\r\n\r\n        \r\n            \r\n        <Navbar id=\"navbar\"> \r\n        <Navbar.Brand className='text-white'><Link to=\"/\" className='text-white text-decoration-none'>My Projects</Link></Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n      <Nav.Link ><Link to=\"/\">Home</Link></Nav.Link>\r\n      <Nav.Link ><Link to=\"/Voting\">Voting</Link></Nav.Link>\r\n      <Nav.Link><Link to=\"/Quotes\">Quotes</Link></Nav.Link>\r\n      <Nav.Link><Link to=\"/Students\">Students</Link></Nav.Link>\r\n      <Nav.Link><Link to=\"/Bmi\">Bmi</Link></Nav.Link>\r\n      <Nav.Link><Link to=\"/Chuck\">Chuck</Link></Nav.Link>\r\n    </Nav>\r\n          </Navbar>\r\n        \r\n        \r\n\r\n        <Switch>\r\n          <Route path=\"/Voting\">\r\n            <Voting />\r\n          </Route>\r\n          <Route path=\"/Quotes\">\r\n        <Quote />\r\n          </Route>\r\n          <Route path=\"/Students\">\r\n            <Students />\r\n          </Route>\r\n          <Route path=\"/Bmi\">\r\n            <Bmi />\r\n          </Route>\r\n          <Route path=\"/Chuck\">\r\n            <Chuck />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n       \r\n\r\n    </Router>\r\n\r\n    </>\r\n  )\r\n    }\r\n\r\nexport default RouterCall","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport RouterCall from './AppRouter';\n// import StudentForm from './Components/Students/StudentForm/StudentForm';\n\nfunction App() {\n  return (\n    <>\n    <RouterCall/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}